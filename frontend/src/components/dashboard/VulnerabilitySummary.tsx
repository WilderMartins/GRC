import { useState, useEffect } from 'react';
import apiClient from '@/lib/axios';
import { useTranslation } from 'next-i18next';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';

type Summary = {
  by_severity: { severity: string; count: number }[];
  by_status: { status: string; count: number }[];
};

const VulnerabilitySummary = () => {
  const { t } = useTranslation('dashboard');
  const [summary, setSummary] = useState<Summary | null>(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    apiClient.get('/api/v1/dashboard/vulnerability-summary')
      .then(response => {
        setSummary(response.data);
        setIsLoading(false);
      })
      .catch(error => {
        console.error("Failed to fetch vulnerability summary:", error);
        setIsLoading(false);
      });
  }, []);

  const severityColors: { [key: string]: string } = {
    'Crítico': '#ef4444',
    'Alto': '#f97316',
    'Médio': '#f59e0b',
    'Baixo': '#84cc16',
  };

  if (isLoading) {
    return <div className="text-center p-4">{t('vulnerability_summary.loading')}</div>;
  }

  return (
    <div className="bg-white dark:bg-gray-800 p-4 rounded-lg shadow h-96">
      <h3 className="text-lg font-semibold text-gray-900 dark:text-white">{t('vulnerability_summary.title')}</h3>
      <p className="text-sm text-gray-500 dark:text-gray-400 mb-4">{t('vulnerability_summary.description')}</p>
      <ResponsiveContainer width="100%" height="100%">
        <BarChart data={summary?.by_severity} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="severity" />
          <YAxis />
          <Tooltip />
          <Legend />
          <Bar dataKey="count" name={t('vulnerability_summary.vulnerabilities')} fill="#8884d8">
            {summary?.by_severity.map((entry, index) => (
              <Bar key={`cell-${index}`} fill={severityColors[entry.severity] || '#8884d8'} />
            ))}
          </Bar>
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
};

export default VulnerabilitySummary;
