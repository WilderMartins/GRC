server {
    # Redireciona todo o tráfego HTTP (porta 80) para HTTPS
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;

    # Caminhos para os certificados SSL (montados via docker-compose)
    ssl_certificate /etc/nginx/ssl/self-signed.crt;
    ssl_certificate_key /etc/nginx/ssl/self-signed.key;

    # Protocolos e Ciphers recomendados
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # HSTS (Strict-Transport-Security) - Força o cliente a usar HTTPS por 6 meses
    # Descomente em produção após garantir que tudo funciona com HTTPS
    # add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;

    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # Content-Security-Policy pode ser adicionado aqui, mas requer uma configuração cuidadosa
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; ...";

    # Servir o frontend estático
    location / {
        root /usr/share/nginx/html/frontend_out;
        try_files $uri $uri/ /index.html;
    }

    # Proxy reverso para a API do backend
    location /api/ {
        proxy_pass http://backend:8080; # O backend escuta na porta 8080 dentro da rede docker
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy reverso para as rotas de autenticação do backend
    location /auth/ {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy reverso para o health check do backend
    location /health {
        proxy_pass http://backend:8080;
    }
}
