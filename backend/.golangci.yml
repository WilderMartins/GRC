run:
  # timeout: 5m
  skip-dirs:
    - internal/mocks
  skip-files:
    - ".*_test.go"

linters-settings:
  errcheck:
    check-blank: true
  govet:
    check-shadowing: true
  gocyclo:
    min-complexity: 15
  maligned:
    suggest-new: true
  goconst:
    min-len: 2
    min-occurrences: 2
  lll:
    line-length: 120
  misspell:
    locale: US
  funlen:
    lines: 100 # Aumentado um pouco de 80
    statements: 60 # Aumentado um pouco de 50
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
      # - experimental # Pode ser ruidoso
      # - opinionated  # Pode ser ruidoso
    disabled-checks:
      - ifElseChain     # Exemplo: permitir cadeias if/else longas se necessário
      - unnamedResult
  nolintlint:
    allow-leading-space: true
    allow-unused: false
    require-explanation: true
    require-specific: true


linters:
  disable-all: true
  enable:
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - funlen
        - goconst
        - dupl
        - gocritic # Muitas vezes testes tem duplicação ou complexidade justificável
    - linters:
        - lll # Não se preocupar com comprimento de linha em arquivos de teste gerados ou mocks
      path: "zz_generated.*\\.go" # Exemplo para arquivos gerados
    - linters:
        - stylecheck
      text: "ST1000: at least one file in a package should have a package comment" # Menos crítico
    - linters:
        - errcheck
      text: "Error return value of `.+Close` is not checked" # Comum para defers

service:
  golangci-lint-version: 1.58.x # Especificar a versão para consistência
```
